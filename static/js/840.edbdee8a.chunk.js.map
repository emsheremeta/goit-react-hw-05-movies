{"version":3,"file":"static/js/840.edbdee8a.chunk.js","mappings":"6PAGcA,EAAQC,EAAAA,GAAAA,IAAH,2HAMLC,EAAUD,EAAAA,GAAAA,IAAH,8EAQPE,EAAQF,EAAAA,GAAAA,EAAH,qOAeLG,EAAQH,EAAAA,GAAAA,EAAH,6FAMLI,EAAUJ,EAAAA,GAAAA,QAAH,sHASPK,EAASL,EAAAA,GAAAA,EAAH,qHAQNM,GAASN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mEAINQ,EAAeR,EAAAA,GAAAA,IAAJ,0E,SC9CV,SAASS,EAAT,GAAmC,IAAD,IAAVC,EAAU,EAAVA,OACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,QAAQC,IAAIH,GACZ,IAAMI,GAAOC,EAAAA,EAAAA,QAAM,oBAACP,EAASQ,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAS5C,OAPAC,EAAAA,EAAAA,YAAU,WACRN,QAAQC,IAAI,SACZM,MAAM,sCAAD,OAAuCT,EAAvC,oBAA0DN,IAC5DgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIhB,EAASgB,EAAb,GACb,GAAE,CAACb,EAASN,IAGXE,IACE,UAACX,EAAD,YACE,UAACK,EAAD,CAAQwB,GAAIV,EAAKW,QAAQC,SAAWZ,EAAKW,QAAQE,OAAjD,WACE,qCADF,cAIA,UAAC/B,EAAD,YACE,0CACA,kBACCU,EAAMsB,UAET,UAAC/B,EAAD,YACE,wCACA,kBACCS,EAAMuB,iBAET,UAAC/B,EAAD,YACE,sCAAc,OACd,kBACCQ,EAAMwB,aAET,SAACrC,EAAD,CACEsC,IACE,kDACAzB,EAAM0B,YAERC,MAAO,OAET,UAAClC,EAAD,YACE,sCACA,kBACCO,EAAM4B,OAAOC,KAAI,SAAAC,GAChB,OAAOA,EAAGC,KAAO,GAClB,QAEH,UAACnC,EAAD,YACE,mDACA,mBACA,SAAC,KAAD,CAASsB,GAAI,OAAb,2BAEF,SAACtB,EAAD,WACE,SAAC,KAAD,CAASsB,GAAI,SAAb,4BAEF,SAAC,KAAD,MAIP,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n export const Image = styled.img`\n position: relative;\n bottom: 40%;\n height: 50%;\n box-shadow: 0 0 20px -10px rgba(0,0,0,0.5);\n `\n export const Wrapper = styled.div` \nposition: absolute;\nwidth: 100%;\nheight: 100%;\n\n `;\n \n\n export const Title = styled.p`\n position: relative;\n padding: 25px;\n left: 35%;\n top: 5%;\n margin-bottom:20px;\n\n font-weight: bold;\n font-size: large;\n border-bottom: 1px solid black;\n width: 20%;\n font-family: inherit;\n\n\n `\n export const Score = styled.p`\nposition: relative;\n      padding: 25px;\n      left: 35%;\n     \n `\n export const Article = styled.article`\n position: relative;\n left:350px;\n text-align: justify;\n width:50%;\n padding: 25px;\n\n\n `\n export const Genres = styled.p`\n position: relative;\n left: 5%;\n bottom: 45%;\n padding: 25px;\ndisplay: inline-block;\n\n `\n export const Button = styled(Link)`\n color: black;\n text-decoration : none;\n `\n export const Information  = styled.div`\n position: relative;\n bottom:40%;\n left:15px;\n `\n ","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport {\n  Image,\n  Wrapper,\n  Score,\n  Article,\n  Genres,\n  Title,\n  Button,\n  Information,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails({ apiKey }) {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  console.log(movieId);\n  const back = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    console.log('fetch');\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`)\n      .then(response => response.json())\n      .then(data => setMovie(data));\n  }, [movieId, apiKey]);\n\n  return (\n    movie && (\n      <Wrapper>\n        <Button to={back.current.pathname + back.current.search}>\n          <span>&#8592;</span>\n          Go back\n        </Button>\n        <Title>\n          <b>Movie title :</b>\n          <br />\n          {movie.title}\n        </Title>\n        <Score>\n          <b>User score </b>\n          <br />\n          {movie.vote_average}\n        </Score>\n        <Article>\n          <b>Overview :{''}</b>\n          <br />\n          {movie.overview}\n        </Article>\n        <Image\n          src={\n            'https://image.tmdb.org/t/p/w600_and_h900_bestv2' +\n            movie.poster_path\n          }\n          width={300}\n        ></Image>\n        <Genres>\n          <b> Genres: </b>\n          <br />\n          {movie.genres.map(el => {\n            return el.name + ' ';\n          })}\n        </Genres>\n        <Information>\n          <b>Additional information</b>\n          <br />\n          <NavLink to={'cast'}>Show cast</NavLink>\n        </Information>\n        <Information>\n          <NavLink to={'review'}>Show review</NavLink>\n        </Information>\n        <Outlet />\n      </Wrapper>\n    )\n  );\n}\n"],"names":["Image","styled","Wrapper","Title","Score","Article","Genres","Button","Link","Information","MovieDetails","apiKey","useState","movie","setMovie","location","useLocation","movieId","useParams","console","log","back","useRef","state","from","useEffect","fetch","then","response","json","data","to","current","pathname","search","title","vote_average","overview","src","poster_path","width","genres","map","el","name"],"sourceRoot":""}